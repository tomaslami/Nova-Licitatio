// SPDX-License-Identifier: MIT

pragma solidity ^0.8.17;

contract Proyecto {

struct Licitacion {
uint ProcessNum;
string ProcessName;
string Ubi;
uint SuggAmount;
uint Time;
    }
event NewLicit (address licit_Id, uint processNum, uint suggAmount, string ubi, string processName, uint time);

Licitacion[] public licitaciones;
mapping(uint => address) public Gob_Licit;

function SetLicit(uint _ProcessNum, uint _SuggAmount, uint _Time, string memory _Ubi, string memory _ProcessName) public{
    licitaciones.push(Licitacion(_ProcessNum, _ProcessName, _Ubi, _SuggAmount, _Time));
    uint id = licitaciones.length;
    Gob_Licit[id] = msg.sender;
    emit NewLicit(msg.sender, _ProcessNum, _SuggAmount, _Ubi, _ProcessName, _Time);
    }

modifier onlyComp (uint _LicitId){
    require(msg.sender == Gob_Licit[_LicitId]);
    _;
}


function ViewLicit () public view returns (Licitacion[] memory){
    return licitaciones;
}



}


(CONEXION PARTE BACK)

const Web3 = require('web3');

var ContractAbi = [
	[
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "licit_Id",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "processNum",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "suggAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "string",
					"name": "ubi",
					"type": "string"
				},
				{
					"indexed": false,
					"internalType": "string",
					"name": "processName",
					"type": "string"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "time",
					"type": "uint256"
				}
			],
			"name": "NewLicit",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "Gob_Licit",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_ProcessNum",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_SuggAmount",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_Time",
					"type": "uint256"
				},
				{
					"internalType": "string",
					"name": "_Ubi",
					"type": "string"
				},
				{
					"internalType": "string",
					"name": "_ProcessName",
					"type": "string"
				}
			],
			"name": "SetLicit",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "ViewLicit",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "ProcessNum",
							"type": "uint256"
						},
						{
							"internalType": "string",
							"name": "ProcessName",
							"type": "string"
						},
						{
							"internalType": "string",
							"name": "Ubi",
							"type": "string"
						},
						{
							"internalType": "uint256",
							"name": "SuggAmount",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "Time",
							"type": "uint256"
						}
					],
					"internalType": "struct Proyecto.Licitacion[]",
					"name": "",
					"type": "tuple[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "licitaciones",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "ProcessNum",
					"type": "uint256"
				},
				{
					"internalType": "string",
					"name": "ProcessName",
					"type": "string"
				},
				{
					"internalType": "string",
					"name": "Ubi",
					"type": "string"
				},
				{
					"internalType": "uint256",
					"name": "SuggAmount",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "Time",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
]

var ContratAddress = "0x6dEe5303a04881DE033660Ae90BD1b2029577daE";          
var conexion = new web3js.eth.Contract(ContractAbi, "0x6dEe5303a04881DE033660Ae90BD1b2029577daE");

const rpcURL = "https://goerli.infura.io/v3/"
const web3 = new Web3(rpcURL)

var userAccount;

var accountInterval = setInterval(function() {
	if (web3.eth.accounts[0] !== userAccount){
		userAccunt = web3.eth.accounts[0];
			updateInterface(userAccount).then(display);
	}
}, 100);

function ViewLicit() {
	return Proyecto.methods.ViewLicit().call()
}	

function SetLicit(_ProcessName, _ProcessNum, _SuggAmount, _Time, _Ubi) {
	return Proyecto.methods.SetLicit(_ProcessName, _ProcessNum, _SuggAmount, _Time, _Ubi).send()
}
